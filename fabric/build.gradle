plugins {
    id 'com.github.johnrengelman.shadow'
}

architectury {
    platformSetupLoomIde()
    fabric()
}

loom {
    accessWidenerPath.set(project(":common").loom.accessWidenerPath)

    runs {
        datagen {
            inherit server
            "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${project(":common").file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=oritech"
            runDir "build/datagen"
        }
    }
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:$rootProject.fabric_api_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury-fabric:$rootProject.architectury_api_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionFabric')

    // Energy API
    include modApi("teamreborn:energy:4.1.0") {
        transitive = false
    }

    // owo lib
    modImplementation "io.wispforest:owo-lib:0.12.15+1.21"

    // geckolib
    modImplementation "software.bernie.geckolib:geckolib-fabric-1.21.1:4.6.6"

    // CSL
    // include modApi("earth.terrarium.common_storage_lib:common-storage-lib-fabric-1.21:0.0.5")
    modImplementation files('common-storage-lib-fabric-1.21-0.0.8.jar')
    modImplementation files('common-storage-lib-data-fabric-1.21-0.0.9.jar')
    modImplementation files('common-storage-lib-resources-fabric-1.21-0.0.8.jar')
    modImplementation files('common-storage-lib-lookup-fabric-1.21-0.0.8.jar')
    // JADE (needed for addon)
    modImplementation "curse.maven:jade-324717:5639994"

    // athena (CTM)
    modRuntimeOnly "earth.terrarium.athena:athena-fabric-1.21:4.0.0"

    // EMI
    modRuntimeOnly "dev.emi:emi-fabric:1.1.12+1.21"

    modRuntimeOnly "org.sinytra:item-asset-export-fabric:1.0.2+1.21"

}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}

tasks.remapJar {
    injectAccessWidener.set(true)
}
