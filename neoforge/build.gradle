plugins {
    id 'com.github.johnrengelman.shadow'
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

loom {
    accessWidenerPath.set(project(":common").loom.accessWidenerPath)
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury-neoforge:$rootProject.architectury_api_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')

    // forgified fabric api
    modImplementation "org.sinytra.forgified-fabric-api:forgified-fabric-api:0.104.0+2.0.15+1.21.1"

    // owo lib
    modImplementation "io.wispforest:owo-lib-neoforge:0.12.15-beta.9+1.21"
    forgeRuntimeLibrary(include(api("io.wispforest:endec:0.1.8")))
    forgeRuntimeLibrary(include(api("io.wispforest.endec:netty:0.1.4")))
    forgeRuntimeLibrary(include(api("io.wispforest.endec:gson:0.1.5")))
    forgeRuntimeLibrary(include(api("io.wispforest.endec:jankson:0.1.5")))
    forgeRuntimeLibrary(include(api("blue.endless:jankson:1.2.2")))

    // geckolib
    modImplementation "software.bernie.geckolib:geckolib-neoforge-1.21.1:4.6.6"

    // athena (CTM)
    modRuntimeOnly "earth.terrarium.athena:athena-neoforge-1.21:4.0.0"

    // CSL
    // because CSL currently loads in energized power in a wrong version
    modRuntimeOnly files('common-storage-lib-neoforge-1.21-0.0.8.jar')
    modRuntimeOnly files('common-storage-lib-data-neoforge-1.21-0.0.8.jar')
    modRuntimeOnly files('common-storage-lib-resources-neoforge-1.21-0.0.8.jar')
    modRuntimeOnly files('common-storage-lib-lookup-neoforge-1.21-0.0.8.jar')

    // jade
    modImplementation "curse.maven:jade-324717:5846105"

    // EMI
    modRuntimeOnly "dev.emi:emi-neoforge:1.1.12+1.21"
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/neoforge.mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}

tasks.remapJar {
    injectAccessWidener = true
    atAccessWideners.add(loom.accessWidenerPath.get().asFile.name)
}
